services:
  traefik:
    container_name: pharmpilot-traefik
    image: traefik:v3.0
    restart: always
    command:
      - "--api.insecure=true" # Remove in production if you don't want the dashboard open
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=${ADMIN_EMAIL}" # Change to your email
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080" # Traefik dashboard (optional)
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "letsencrypt:/letsencrypt"
    networks:
      - web
      - db_net

  pharmpilot-app:
    container_name: pharmpilot-app
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    restart: always
    env_file:
      - .env
    networks:
      - web
      - db_net
    depends_on:
      - db-postgres
      - elastic-search
    deploy:
      resources:
        limits:
          memory: 512m  # Limit app memory
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pharmpilot.rule=Host(`localhost`)" # Change to your domain in production
      # - "traefik.http.routers.pharmpilot.entrypoints=web,websecure" # Uncomment in production
      # - "traefik.http.routers.pharmpilot.tls.certresolver=letsencrypt" # Uncomment in production
      - "traefik.http.services.pharmpilot.loadbalancer.server.port=3000"

  db-postgres:
    image: postgres:16
    container_name: pharmpilot-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTY_DB_NAME}
      POSTGRES_USER: ${ADMIN_EMAIL}
      POSTGRES_PASSWORD: ${POSTY_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
      # Optimize PostgreSQL for low memory
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres
      -c shared_buffers=128MB
      -c effective_cache_size=256MB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100
    volumes:
      - posty_data:/var/lib/postgresql/data
    networks:
      - db_net
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          memory: 384m

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: pharmpilot-pgadmin
  #   restart: always
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: ${ADMIN_EMAIL}
  #     PGLADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
  #   volumes:
  #     - pgadmin_data:/var/lib/pgadmin
  #   networks:
  #     - db_net
  #   depends_on:
  #     - db-postgres
  #   ports:
  #     - "5050:80"

  elastic-search:
    container_name: elastic-search
    restart: always
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.1
    environment:
        - discovery.type=single-node
        - ES_JAVA_OPTS=-Xms256m -Xmx512m  # Reduced from 512m-512m
        - ELASTIC_PASSWORD=${ELASTICSEARCH_PASSWORD}
        - xpack.security.enabled=true
        - "bootstrap.memory_lock=true"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
        - "9200:9200"
    volumes:
        - elastic_data:/usr/share/elasticsearch/data
    networks:
        - db_net
    deploy:
      resources:
        limits:
          memory: 768m  # Hard memory limit

volumes:
  letsencrypt:
  posty_data:
  # pgadmin_data:
  elastic_data:

networks:
  web:
    external: false
  db_net:
    external: false
